package Cadastros;

import Formularios.Buscas;
import javax.swing.JOptionPane;
import Tabelas.Vendedor;
import Tabelas.Produtos;
import Tabelas.Cliente;
import Tela_Principal.Tela_Principal;
import javax.swing.UIManager;

/**
 *
 * @author diogo
 */
public class Tela_Cadastro extends javax.swing.JFrame {

    /**
     * Creates new form Tela_Cadastro
     */
    public Tela_Cadastro() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCadastrarCliente = new javax.swing.JToggleButton();
        btnCadastrarVendedor = new javax.swing.JToggleButton();
        btnCadastrarProduto = new javax.swing.JToggleButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("O que deseja cadastrar:");

        btnCadastrarCliente.setText("Cliente");
        btnCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarClienteActionPerformed(evt);
            }
        });

        btnCadastrarVendedor.setText("Vendedor");
        btnCadastrarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarVendedorActionPerformed(evt);
            }
        });

        btnCadastrarProduto.setText("Produto");
        btnCadastrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarProdutoActionPerformed(evt);
            }
        });

        btnVoltar.setForeground(new java.awt.Color(0, 0, 255));
        btnVoltar.setText("voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCadastrarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCadastrarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCadastrarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(btnCadastrarVendedor)
                .addGap(18, 18, 18)
                .addComponent(btnCadastrarProduto)
                .addGap(18, 18, 18)
                .addComponent(btnCadastrarCliente)
                .addGap(18, 18, 18)
                .addComponent(btnVoltar)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarVendedorActionPerformed
        //cadastrar vendedores
        UIManager.put("OptionPane.okButtonText","Cadastrar");
        UIManager.put("OptionPane.cancelButtonText","Cancelar");
        String nome = JOptionPane.showInputDialog(null,"Nome: ","Cadastro: Vendedor",1);
        
        if(nome != null){ //condição para não cadastrar vendedor com nome nulo
            
                boolean repetir = false;
                boolean parar = false;
                long cpf = 0;
                Buscas busca = new Buscas();
                Vendedor vendedor = new Vendedor();
                
                do{
                    //metodo para forçar o usuário a digitar somente números
                    do{
                        try{
                                UIManager.put("OptionPane.okButtonText", "Cadastrar");
                                String entrada = JOptionPane.showInputDialog(null,
                                        "Informe o Cpf:\nOBS: somente números",
                                        "Cadastro: Vendedor",
                                        1);
                                repetir = false;
                                if(entrada == null){
                                    parar = true;
                                    break;
                                }else{
                                    cpf = Long.parseLong(entrada);
                                    repetir = false;
                                }
                        }catch(Exception e){
                            UIManager.put("OptionPane.okButtonText","Ok");
                            JOptionPane.showMessageDialog(null,"Apenas Números","erro",0);
                            repetir  = true;
                        }
                    }while(repetir == true);
                    
                    if(parar){
                        break;
                    }
                    //metodo para verificar a disponibilidade do cpf
                    UIManager.put("OptionPane.okButtonText","Tente novamente");
                    if(cpf == 0){
                        JOptionPane.showMessageDialog(null,"CPF Invalido","erro",0);
                    }else{
                        repetir = vendedor.CadastrarVendedor(cpf, nome);
                        if(repetir == false){
                            UIManager.put("OptionPane.okButtonText","Tente novamente");
                            JOptionPane.showMessageDialog(null, "Esse cpf ja esta cadastrado","erro",0);
                        }
                    }
                    
                }while(repetir == false);
                
                if(parar == false){
                    vendedor = busca.BuscarVendedor(cpf);
                    UIManager.put("OptionPane.okButtonText", "Ok");
                    JOptionPane.showMessageDialog(null,
                            "Vendedor cadastrado com exito\n" +
                            "CPF: " + vendedor.getCpf_vendedor() + "\nNome: " + vendedor.getNome_vendedor(),
                            "Cadastro: Vendedor",
                            1);
                    
                }
        }
    }//GEN-LAST:event_btnCadastrarVendedorActionPerformed

    private void btnCadastrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarProdutoActionPerformed
        // TODO add your handling code here:
        UIManager.put("OptionPane.okButtonText", "Cadastrar");
        String nome = JOptionPane.showInputDialog(null,"Nome: ","Cadastro: Produto",1);
        
        if(nome != null){ //condição para produto com o nome nulo
            
            float valor = 0;
            boolean parar = false;
            boolean repetir = false;
            Produtos produto = new Produtos();
            Buscas busca = new Buscas();
            
            
            do{
                //metodo para forçar o usuário a digitar somente números
                do{
                    try{
                         UIManager.put("OptionPane.okButtonText", "Cadastrar");
                         String entrada = (JOptionPane.showInputDialog(null,"Valor: ","Cadastro: Produto",1));
                         repetir = false;
                         if(entrada == null){
                            parar = true;
                            break;
                         }else{
                             valor = Float.parseFloat(entrada);
                         }
                    }catch(Exception e){
                        UIManager.put("OptionPane.okButtonText", "Ok");
                        JOptionPane.showMessageDialog(null,"Apenas números","erro",0);
                        repetir = true;
                    }
                }while(repetir == true);
                
                if(parar){ //condição para finalizar a execução do programa
                    break;
                }
                
                if(valor != 0){
                    repetir = produto.CadastrarProduto(nome, valor);
                    if(repetir == false){
                        UIManager.put("OptionPane.okButtonText", "Tente novamente");
                        JOptionPane.showMessageDialog(null,"Esse produto ja esta cadastrado","erro",0);
                    }
                }
                
            }while(repetir == false);
            
            
            if(parar == false){
                produto = busca.PegarProduto(nome);
                UIManager.put("OptionPane.okButtonText", "Ok");
                JOptionPane.showMessageDialog(null,
                             "Produto cadastrado com sucesso!" +
                             "\nCódigo de barra: " + produto.getCod_barras() + 
                             "\nNome: " + produto.getNome_produto() + "\nValor: " + produto.getValor(),
                        "Cadastro: Produto",
                        1);
                
            }
        }
    }//GEN-LAST:event_btnCadastrarProdutoActionPerformed

    private void btnCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarClienteActionPerformed
        // TODO add your handling code here:
        UIManager.put("OptionPane.okButtonText","Cadastrar");
        String nome = JOptionPane.showInputDialog(null,"Nome: ","cadastro: Cliente",1);
       
        if(nome != null){
            boolean repetir = false;
            long cpf = 0;
            boolean parar = false;
            Cliente cliente = new Cliente();
            Buscas busca = new Buscas();
            
            //metodo para forçar o usuário a digitar somente números
            do{
                
                do{
                    try{
                        UIManager.put("OptionPane.okButtonText","Cadastrar");
                        String entrada = JOptionPane.showInputDialog(null,
                                "Informe o Cpf:\nOBS: somente números",
                                "Cadastro: Cliente",
                                1);
                        repetir = false;
                        if(entrada == null){
                            parar = true;
                            break;
                        }else{
                            cpf = Long.parseLong(entrada);
                            repetir = false;
                        }
                    }catch(Exception e){
                        UIManager.put("OptionPane.okButtonText", "Ok");
                        JOptionPane.showMessageDialog(null,"Apenas números","Cadastro: Cliente",0);
                        repetir = true;
                    }
                }while(repetir == true);
                
                if(parar){
                    break;
                }
                
                //metodo para verificar a disponibilidade do cpf
                UIManager.put("OptionPane.okButtonText","Tente novamente");
                if(cpf == 0){
                        JOptionPane.showMessageDialog(null,"CPF Invalido","erro",0);
                }else{
                    repetir = cliente.CadastrarCliente(cpf, nome);
                    if(repetir == false){
                            JOptionPane.showMessageDialog(null, "Esse cpf ja esta cadastrado","erro",0);
                        }
                }
            }while(repetir == false);
            
            if(parar == false){
                cliente = busca.BuscarCliente(cpf);
                UIManager.put("OptionPane.okButtonText", "Ok");
                JOptionPane.showMessageDialog(null,
                            "Cliente cadastrado com êxito\n" +
                            "ID: " + cliente.getCpf_cliente() + "\nNome:" + cliente.getNome_cliente(),
                            "Cadastro: Cliente",
                            1);
                    
            }
        }
    }//GEN-LAST:event_btnCadastrarClienteActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Tela_Principal telaPrincipal = new Tela_Principal();
        telaPrincipal.setVisible(true);
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_Cadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCadastrarCliente;
    private javax.swing.JToggleButton btnCadastrarProduto;
    private javax.swing.JToggleButton btnCadastrarVendedor;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
