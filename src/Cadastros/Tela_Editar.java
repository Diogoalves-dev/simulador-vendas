package Cadastros;

import Formularios.Buscas;
import Tabelas.Cliente;
import Tabelas.Produtos;
import Tabelas.Vendedor;
import Tela_Principal.Tela_Principal;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author diogo
 */
public class Tela_Editar extends javax.swing.JFrame {

    /**
     * Creates new form Tela_Editar
     */
    public Tela_Editar() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEditarVendedor = new javax.swing.JButton();
        btnEditarProduto = new javax.swing.JButton();
        btnEditarCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEditarVendedor.setText("Vendedor");
        btnEditarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarVendedorActionPerformed(evt);
            }
        });

        btnEditarProduto.setText("Produto");
        btnEditarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProdutoActionPerformed(evt);
            }
        });

        btnEditarCliente.setText("Cliente");
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Edite um Cadastro");

        btnVoltar.setForeground(new java.awt.Color(0, 0, 255));
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEditarVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(btnEditarVendedor)
                .addGap(26, 26, 26)
                .addComponent(btnEditarProduto)
                .addGap(27, 27, 27)
                .addComponent(btnEditarCliente)
                .addGap(18, 18, 18)
                .addComponent(btnVoltar)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        Tela_Principal telaPrincipal = new Tela_Principal();
        this.setVisible(false);
        telaPrincipal.setVisible(true);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        // TODO add your handling code here:
        boolean repetir = false;
        boolean parar = false;
        long cpf = 0;
        Buscas busca = new Buscas();
        Cliente cliente =  new Cliente();
        Edit_Cliente editarCliente = new Edit_Cliente();
        
        do{
            do{
                try{
                    UIManager.put("OptionPane.okButtonText", "Buscar");
                    String entrada = JOptionPane.showInputDialog(null,
                                        "Informe o Cpf:\nOBS: somente números",
                                        "Editar: Cliente",
                                        1);
                    repetir = false;
                    if(entrada == null){
                        parar = true;
                        break;
                    }else{
                        cpf = Long.parseLong(entrada);
                        repetir = false;
                    }
                }catch(Exception e){
                        UIManager.put("OptionPane.okButtonText","Ok");
                        JOptionPane.showMessageDialog(null,"Apenas Números","erro",0);
                        repetir  = true;
                }
            }while(repetir == true);
            
            if(parar){
                break;
            }
            
            try{
                boolean existe = busca.EncontrarCliente(cpf);
                if(existe){
                    cliente = busca.BuscarCliente(cpf);
                    editarCliente.setDados(cliente.getCpf_cliente(), cliente.getNome_cliente());
                    editarCliente.setVisible(true);
                    this.setVisible(false);
                    repetir = false;
                }else{
                    UIManager.put("OptionPane.okButtonText","Ok");
                    JOptionPane.showMessageDialog(null, "o cpf informado não existe em nossos cadastros", "Editar: Cliente",0);
                    repetir = true;
                }
            }catch(Exception e){
                repetir = true;
            }
        }while(repetir == true);
        
    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void btnEditarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarVendedorActionPerformed
        // TODO add your handling code here:
        boolean repetir = false;
        boolean parar = false;
        long cpf = 0;
        Buscas busca = new Buscas();
        Vendedor vendedor = new Vendedor();
        Edit_Vendedor editarVendedor = new Edit_Vendedor();
        
        do{
            do{
                try{
                    UIManager.put("OptionPane.okButtonText", "Buscar");
                    String entrada = JOptionPane.showInputDialog(null,
                                        "Informe o Cpf:\nOBS: somente números",
                                        "Editar: Vendedor",
                                        1);
                    repetir = false;
                    if(entrada == null){
                        parar = true;
                        break;
                    }else{
                        cpf = Long.parseLong(entrada);
                        repetir = false;
                    }
                }catch(Exception e){
                        UIManager.put("OptionPane.okButtonText","Ok");
                        JOptionPane.showMessageDialog(null,"Apenas Números","erro",0);
                        repetir  = true;
                }
            }while(repetir == true);
            
            if(parar){
                break;
            }
            
            try{
                boolean existe = busca.EcontrarVendedor(cpf);
                if(existe){
                    vendedor = busca.BuscarVendedor(cpf);
                    editarVendedor.setDados(vendedor.getCpf_vendedor(),vendedor.getNome_vendedor());
                    editarVendedor.setVisible(true);
                    this.setVisible(false);
                    repetir = false;
                }else{
                    UIManager.put("OptionPane.okButtonText","Ok");
                    JOptionPane.showMessageDialog(null, "o cpf informado não existe em nossos cadastros", "Editar: Vendedor",0);
                    repetir = true;
                }
            }catch(Exception e){
                repetir = true;
            }
        }while(repetir == true);
    }//GEN-LAST:event_btnEditarVendedorActionPerformed

    private void btnEditarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProdutoActionPerformed
        // TODO add your handling code here:
        boolean repetir = false;
        boolean parar = false;
        long cod_barras = 0;
        Buscas busca = new Buscas();
        Produtos produto = new Produtos();
        Edit_Produto editarProduto = new Edit_Produto();
        
        do{
            do{
                try{
                    UIManager.put("OptionPane.okButtonText", "Buscar");
                    String entrada = JOptionPane.showInputDialog(null,
                                        "Informe o código de barras:\nOBS: somente números",
                                        "Editar: Produto",
                                        1);
                    repetir = false;
                    if(entrada == null){
                        parar = true;
                        break;
                    }else{
                        cod_barras = Long.parseLong(entrada);
                        repetir = false;
                    }
                }catch(Exception e){
                        UIManager.put("OptionPane.okButtonText","Ok");
                        JOptionPane.showMessageDialog(null,"Apenas Números","erro",0);
                        repetir  = true;
                }
            }while(repetir == true);
            
            if(parar){
                break;
            }
            
            try{
                boolean existe = busca.EncontrarProduto(cod_barras);
                if(existe){
                    produto = busca.PegarProduto(cod_barras);
                    editarProduto.setDados(produto.getCod_barras(),produto.getNome_produto(),produto.getValor());
                    editarProduto.setVisible(true);
                    this.setVisible(false);
                    repetir = false;
                }else{
                    UIManager.put("OptionPane.okButtonText","Ok");
                    JOptionPane.showMessageDialog(null, "o Código informado não existe em nossos cadastros", "Editar: Produto",0);
                    repetir = true;
                }
            }catch(Exception e){
                repetir = true;
            }
        }while(repetir == true);
    }//GEN-LAST:event_btnEditarProdutoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_Editar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnEditarProduto;
    private javax.swing.JButton btnEditarVendedor;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
